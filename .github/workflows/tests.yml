name: 'tests'

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
        include:
          - os: ubuntu-latest
            CONDA_OS: linux-64
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        use-mamba: true
        auto-update-conda: true
        activate-environment: test
    - name: Set up conda and install dependencies
      shell: bash -l {0}
      run: |
        python -m pip install --upgrade pip
        python -m pip install ./dose_instruction_parser[dev]
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        echo '## Test Coverage Report' | tee $GITHUB_STEP_SUMMARY
        report_file=tests.md
        echo "REPORT_FILE=${report_file}" >> "$GITHUB_ENV"
        python -m pytest -vv dose_instruction_parser \
            --ignore=tests/test_parser.py \
            --cov=di_parser \
            --cov-report=xml --cov-report json \
            --cov-report term-missing \
            --md-report --md-report-flavor gfm \
            --md-report-output "${report_file}" | tee $GITHUB_STEP_SUMMARY 
    - name: Create badge
      if: github.event_name == 'pull_request'
      uses: tj-actions/coverage-badge-py@v2
      id: coverage-badge-py
      with:
        # Output path to write the 
        # coverage badge. 
        # Type: string
        # Default: "coverage.svg"
        output: 'coverage.svg'
    - name: Code Coverage Report
      if: github.event_name == 'pull_request'
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '40 80'
    - name: Add Coverage PR Comment
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: code-coverage-results.md
    - name: List all changed files tracked and untracked files
      if: github.event_name == 'pull_request'
      env:
         CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
      run: |
        mv coverage.svg coverage/
        mv coverage.xml coverage/
        mv coverage.json coverage/
        mv tests.md coverage/
        mv code-coverage-results.md coverage/
        ls coverage
        echo "Changed files: $CHANGED_FILES"
    - name: Commit files
      if: github.event_name == 'pull_request'
      # Move files to coverage folder and commit this folder
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -f coverage/coverage.json
        git add coverage/*
        git pull 
        git commit -m "Updated coverage files"
    - name: Push changes
      if: github.event_name == 'pull_request'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.github_token }}
        branch: ${{ github.head_ref }}
    - name: Render reports to the PR when tests fail
      if: failure() && github.event_name == 'pull_request'
      env:
        GH_TOKEN: ${{ github.token }}
        PR_NUMBER: ${{ github.event.number }}
      run: |
          gh pr comment $PR_NUMBER --body-file "$REPORT_FILE"
    


      
